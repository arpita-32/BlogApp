{"version":3,"sources":["LikeController.js"],"names":["Post","require","Like","response","exports","likePost","req","res","_req$body","post","user","like","savedLike","updatedPost","regeneratorRuntime","async","_context","prev","next","awrap","save","sent","findByIdAndUpdate","$push","likes","_id","new","json","t0","abrupt","error","stop","unlikePost","_req$body2","deletedLike","_context2","body","findOneAndDelete","$pull","status"],"mappings":"aACA,IAAMA,KAAOC,QAAQ,uBADrBC,KAAAD,QAAA,gCACqBA,QAAA,WAAXE,kBAAAA,SAKVC,QAAQC,SAAW,SAAOC,EAAKC,GAAZ,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAC,mBAAAC,MAAA,SAAAC,GAAA,OAAA,OAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EAAA,OAAAF,EAAAC,KAAA,EAAAT,EAHXL,EAAAA,KAKIM,EAFOD,EAEPC,KAAMC,EAFCF,EAEDE,KACRC,EAAO,IAAIT,KAAK,CACpBO,KAAAA,EAJNL,KAAAA,IAAmBY,EAAAE,KAAA,EAAAJ,mBAAAK,MAOSR,EAAKS,QAPd,KAAA,EAAA,OAOTR,EAPSI,EAAAK,KAAAL,EAAAE,KAAA,EAAAJ,mBAAAK,MAAAnB,KAAAsB,kBAAAb,EAAA,CAAAc,MAAA,CAAAC,MAAAZ,EAAAa,MAAA,CAAAC,KAAA,IAIbjB,SAAI,SACJC,QALa,KAAA,EAAAG,EAAAG,EAAAK,KAAAd,EAAAoB,KAAA,CAAAlB,KAAAI,IAAAG,EAAAE,KAAA,GAAA,MAAA,KAAA,GAAA,OAAAF,EAAAC,KAAA,GAAAD,EAAAY,GAAAZ,EAAA,MAAA,GAAAA,EAAAa,OAAA,SAOTjB,EAAAA,OAPS,KAAAe,KAAA,CAAAG,MAAA,2BAAA,KAAA,GAAA,IAAA,MAAA,OAAAd,EAAAe,SAAA,KAAA,KAAA,CAAA,CAAA,EAAA,OAaX3B,QAAA4B,WAAK,SAAA1B,EAAAC,GAAA,IAAA0B,EAAAxB,EAAAE,EAAAuB,EAAArB,EAAA,OAAAC,mBAAAC,MAAA,SAAAoB,GAAA,OAAA,OAAAA,EAAAlB,KAAAkB,EAAAjB,MAAA,KAAA,EAAA,OAAAiB,EAAAlB,KAAA,EAAAgB,EAkBc3B,EAAI8B,KAAnB3B,EAlBCwB,EAkBDxB,KAAME,EAlBLsB,EAkBKtB,KAlBLwB,EAAAjB,KAAA,EAAAJ,mBAAAK,MAKAjB,KAAAmC,iBAAA,CAAA5B,KAAAA,EAAAgB,IAAAd,KALA,KAAA,EAAA,OAKTJ,EALS4B,EAAAd,KAAAc,EAAAjB,KAAA,EAAAJ,mBAAAK,MAbMnB,KAAAsB,kBAAAb,EAuCb,CAAE6B,MAAO,CAAEd,MAAOU,EAAYT,MAvCjB,CAAAC,KAAA,KAaN,KAAA,EAbMb,EAaNsB,EAAAd,KAbMd,EAAAoB,KAAA,CAuBbG,KAAAA,IAVOK,EAAAjB,KAAA,GAAA,MAAA,KAAA,GAAA,OAAAiB,EAAAlB,KAAA,GAAAkB,EAAAP,GAAAO,EAAA,MAAA,GAAAA,EAAAN,OAAA,SAbMtB,EAAAgC,OAAA,KAAAZ,KAAA,CAAAG,MAAA,6BAaN,KAAA,GAAA,IAAA,MAAA,OAAAK,EAAAJ,SAAA,KAAA,KAAA,CAAA,CAAA,EAAA","file":"LikeController.min.js","sourcesContent":["// Import Models\nconst Post = require(\"../models/postModel\");\nconst Like = require(\"../models/likeModel\");\nconst { response } = require(\"express\");\n\n// Like a Post\nexports.likePost = async (req, res) => {\n  try {\n    const { post, user } = req.body;\n    const like = new Like({\n      post,\n      user,\n    });\n    const savedLike = await like.save();\n\n    // Update Post Collection basis on this\n    const updatedPost = await Post.findByIdAndUpdate(\n      post,\n      { $push: { likes: savedLike._id } },\n      { new: true }\n    )\n      .populate(\"likes\")\n      .exec();\n\n    res.json({\n      post: updatedPost,\n    });\n  } catch (err) {\n    return res.status(500).json({\n      error: \"Error While Like Post\",\n    });\n  }\n};\n\n// Unlike a Post\nexports.unlikePost = async (req, res) => {\n  try {\n    const { post, like } = req.body;\n\n    // find and delete the from like collection\n    const deletedLike = await Like.findOneAndDelete({ post: post, _id: like });\n\n    // update the post collection\n    const updatedPost = await Post.findByIdAndUpdate(\n      post,\n      { $pull: { likes: deletedLike._id } },\n      { new: true }\n    );\n\n    res.json({\n      post: updatedPost,\n    });\n  } catch (err) {\n    return res.status(500).json({\n      error: \"Error While unLike Post\",\n    });\n  }\n};\n"]}