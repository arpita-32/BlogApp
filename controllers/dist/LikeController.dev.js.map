{"version":3,"sources":["LikeController.js"],"names":["Post","require","Like","response","exports","likePost","req","res","body","post","user","like","save","savedLike","findByIdAndUpdate","$push","likes","_id","populate","exec","updatedPost","json","status","error","unlikePost","findOneAndDelete","deletedLike","$pull"],"mappings":";;AAAA;AACA,IAAMA,IAAI,GAAGC,OAAO,CAAC,qBAAD,CAApB;;AACA,IAAMC,IAAI,GAAGD,OAAO,CAAC,qBAAD,CAApB;;eACqBA,OAAO,CAAC,SAAD,C;IAApBE,Q,YAAAA,Q,EAER;;;AACAC,OAAO,CAACC,QAAR,GAAmB,iBAAOC,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAEQD,GAAG,CAACE,IAFZ,EAEPC,IAFO,aAEPA,IAFO,EAEDC,IAFC,aAEDA,IAFC;AAGTC,UAAAA,IAHS,GAGF,IAAIT,IAAJ,CAAS;AACpBO,YAAAA,IAAI,EAAJA,IADoB;AAEpBC,YAAAA,IAAI,EAAJA;AAFoB,WAAT,CAHE;AAAA;AAAA,0CAOSC,IAAI,CAACC,IAAL,EAPT;;AAAA;AAOTC,UAAAA,SAPS;AAAA;AAAA,0CAUWb,IAAI,CAACc,iBAAL,CACxBL,IADwB,EAExB;AAAEM,YAAAA,KAAK,EAAE;AAAEC,cAAAA,KAAK,EAAEH,SAAS,CAACI;AAAnB;AAAT,WAFwB,EAGxB;AAAE,mBAAK;AAAP,WAHwB,EAKvBC,QALuB,CAKd,OALc,EAMvBC,IANuB,EAVX;;AAAA;AAUTC,UAAAA,WAVS;AAkBfb,UAAAA,GAAG,CAACc,IAAJ,CAAS;AACPZ,YAAAA,IAAI,EAAEW;AADC,WAAT;AAlBe;AAAA;;AAAA;AAAA;AAAA;AAAA,2CAsBRb,GAAG,CAACe,MAAJ,CAAW,GAAX,EAAgBD,IAAhB,CAAqB;AAC1BE,YAAAA,KAAK,EAAE;AADmB,WAArB,CAtBQ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAnB,C,CA4BA;;;AACAnB,OAAO,CAACoB,UAAR,GAAqB,kBAAOlB,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAEMD,GAAG,CAACE,IAFV,EAETC,IAFS,cAETA,IAFS,EAEHE,IAFG,cAEHA,IAFG,EAIjB;;AAJiB;AAAA,0CAKST,IAAI,CAACuB,gBAAL,CAAsB;AAAEhB,YAAAA,IAAI,EAAEA,IAAR;AAAcQ,YAAAA,GAAG,EAAEN;AAAnB,WAAtB,CALT;;AAAA;AAKXe,UAAAA,WALW;AAAA;AAAA,0CAQS1B,IAAI,CAACc,iBAAL,CACxBL,IADwB,EAExB;AAAEkB,YAAAA,KAAK,EAAE;AAAEX,cAAAA,KAAK,EAAEU,WAAW,CAACT;AAArB;AAAT,WAFwB,EAGxB;AAAE,mBAAK;AAAP,WAHwB,CART;;AAAA;AAQXG,UAAAA,WARW;AAcjBb,UAAAA,GAAG,CAACc,IAAJ,CAAS;AACPZ,YAAAA,IAAI,EAAEW;AADC,WAAT;AAdiB;AAAA;;AAAA;AAAA;AAAA;AAAA,4CAkBVb,GAAG,CAACe,MAAJ,CAAW,GAAX,EAAgBD,IAAhB,CAAqB;AAC1BE,YAAAA,KAAK,EAAE;AADmB,WAArB,CAlBU;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAArB","sourcesContent":["// Import Models\nconst Post = require(\"../models/postModel\");\nconst Like = require(\"../models/likeModel\");\nconst { response } = require(\"express\");\n\n// Like a Post\nexports.likePost = async (req, res) => {\n  try {\n    const { post, user } = req.body;\n    const like = new Like({\n      post,\n      user,\n    });\n    const savedLike = await like.save();\n\n    // Update Post Collection basis on this\n    const updatedPost = await Post.findByIdAndUpdate(\n      post,\n      { $push: { likes: savedLike._id } },\n      { new: true }\n    )\n      .populate(\"likes\")\n      .exec();\n\n    res.json({\n      post: updatedPost,\n    });\n  } catch (err) {\n    return res.status(500).json({\n      error: \"Error While Like Post\",\n    });\n  }\n};\n\n// Unlike a Post\nexports.unlikePost = async (req, res) => {\n  try {\n    const { post, like } = req.body;\n\n    // find and delete the from like collection\n    const deletedLike = await Like.findOneAndDelete({ post: post, _id: like });\n\n    // update the post collection\n    const updatedPost = await Post.findByIdAndUpdate(\n      post,\n      { $pull: { likes: deletedLike._id } },\n      { new: true }\n    );\n\n    res.json({\n      post: updatedPost,\n    });\n  } catch (err) {\n    return res.status(500).json({\n      error: \"Error While unLike Post\",\n    });\n  }\n};\n"],"file":"LikeController.dev.js"}